#!/usr/bin/python3
# Запустите это с --help, чтобы увидеть доступные опции для трассировки и отладки.
# См. Https://github.com/cockpit-project/cockpit/blob/master/test/common/testlib.py.
# «Class Browser» и «Class MachineCase» для доступного API.

import os
import sys

import testlib

# импортировать оборудование Cockpit для тестовых виртуальных машин и его API для тестирования браузера
TEST_DIR = os.path.dirname(__file__)
sys.path.append(os.path.join(TEST_DIR, "common"))
sys.path.append(os.path.join(os.path.dirname(TEST_DIR), "bots/machine"))


class TestApplication(testlib.MachineCase):
    def testBasic(self):
        b = self.browser
        m = self.machine

        self.login_and_go("/blog-kit")
        # проверить ожидаемый заголовок
        b.wait_text("h2.pf-c-title", "Blog Kit")

        # проверить ожидаемое имя хоста
        hostname = m.execute("hostname").strip()
        b.wait_in_text("h4.pf-c-alert__title", "Running on " + hostname)

        # изменить текущее имя хоста
        m.execute("echo new-%s > /etc/hostname" % hostname)
        # подтвердить новое имя хоста
        b.wait_in_text("h4.pf-c-alert__title", "Running on new-" + hostname)

        # изменить язык на немецкий
        b.switch_to_top()
        b.click("#navbar-dropdown")
        b.click(".display-language-menu a")
        b.wait_popup('display-language')
        b.set_val("#display-language select", "de-de")
        b.click("#display-language-select-button")
        b.expect_load()
        # HACK: обходной путь переключения языков в Chrome, не работающем в текущем сеансе (выпуск кабины № 8160)
        b.reload(ignore_cache=True)
        b.wait_present("#content")
        # метка меню (из манифеста) должна быть переведена
        b.wait_text("#host-apps a[href='/blog-kit']", "Bausatz")

        b.go("/blog-kit")
        b.enter_page("/blog-kit")
        # метка страницы (от js) должна быть переведена
        b.wait_in_text("h4.pf-c-alert__title", "Läuft auf")

if __name__ == '__main__':
    testlib.test_main()
